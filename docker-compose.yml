version: "3"

services:
  db:
    image: postgres
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ocp
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ocp_resource
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - 15432:5432
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    environment:
#      DB_URL: "postgresql://ocp:postgres@db/ocp_resource"
#    ports:
#      - "7070:7070"
#      - "7072:7072"
#    depends_on:
#      - db
  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
    environment:
      zk_id: "1"
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
  kafka-ui:
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka
    links:
      - kafka:kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - "127.0.0.1:9094:9094"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:32181"
      KAFKA_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://kafka:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  prometheus:
    image: prom/prometheus
#    links:
#      - app:app
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
volumes:
  pgdata:
